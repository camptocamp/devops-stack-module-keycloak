# ---
# # NOTE: following is a test realm. Tested w/ argocd.
# # TODO create proper realm
# # TODO things like redirect uris must ve variable. Pending decision on whether to continue with the CR or not.
# apiVersion: k8s.keycloak.org/v2alpha1
# kind: KeycloakRealmImport
# metadata:
#   name: demo-realm
# spec:
#   keycloakCRName: {{ .Values.keycloak.name }}
#   realm:
#     id: 2054fbeb-d3c7-4a44-9601-2fbc1bf3ac5c
#     realm: demo
#     notBefore: 0
#     defaultSignatureAlgorithm: RS256
#     revokeRefreshToken: false
#     refreshTokenMaxReuse: 0
#     accessTokenLifespan: 300
#     accessTokenLifespanForImplicitFlow: 900
#     ssoSessionIdleTimeout: 1800
#     ssoSessionMaxLifespan: 36000
#     ssoSessionIdleTimeoutRememberMe: 0
#     ssoSessionMaxLifespanRememberMe: 0
#     offlineSessionIdleTimeout: 2592000
#     offlineSessionMaxLifespanEnabled: false
#     offlineSessionMaxLifespan: 5184000
#     clientSessionIdleTimeout: 0
#     clientSessionMaxLifespan: 0
#     clientOfflineSessionIdleTimeout: 0
#     clientOfflineSessionMaxLifespan: 0
#     accessCodeLifespan: 60
#     accessCodeLifespanUserAction: 300
#     accessCodeLifespanLogin: 1800
#     actionTokenGeneratedByAdminLifespan: 43200
#     actionTokenGeneratedByUserLifespan: 300
#     oauth2DeviceCodeLifespan: 600
#     oauth2DevicePollingInterval: 5
#     enabled: true
#     sslRequired: external
#     registrationAllowed: false
#     registrationEmailAsUsername: false
#     rememberMe: false
#     verifyEmail: false
#     loginWithEmailAllowed: true
#     duplicateEmailsAllowed: false
#     resetPasswordAllowed: false
#     editUsernameAllowed: false
#     bruteForceProtected: false
#     permanentLockout: false
#     maxFailureWaitSeconds: 900
#     minimumQuickLoginWaitSeconds: 60
#     waitIncrementSeconds: 60
#     quickLoginCheckMilliSeconds: 1000
#     maxDeltaTimeSeconds: 43200
#     failureFactor: 30
#     roles:
#       realm:
#         - id: d7f9b90f-fe25-4f79-adc7-31f59936c8ba
#           name: default-roles-demo
#           description: ${role_default-roles}
#           composite: true
#           composites:
#             realm:
#               - offline_access
#               - uma_authorization
#             client:
#               account:
#                 - view-profile
#                 - manage-account
#           clientRole: false
#           containerId: 2054fbeb-d3c7-4a44-9601-2fbc1bf3ac5c
#           attributes: {}
#         - id: f8294cbd-0515-49ec-9197-e85b26f56a58
#           name: uma_authorization
#           description: ${role_uma_authorization}
#           composite: false
#           clientRole: false
#           containerId: 2054fbeb-d3c7-4a44-9601-2fbc1bf3ac5c
#           attributes: {}
#         - id: 422fdb30-ad9f-43d5-add5-8a304cc068cd
#           name: offline_access
#           description: ${role_offline-access}
#           composite: false
#           clientRole: false
#           containerId: 2054fbeb-d3c7-4a44-9601-2fbc1bf3ac5c
#           attributes: {}
#       client:
#         realm-management:
#           - id: bdc920e1-e618-4a7b-bd2a-8cf4a3423473
#             name: view-authorization
#             description: ${role_view-authorization}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 07d95a44-244a-44c1-9f80-c5704966eec9
#             name: manage-users
#             description: ${role_manage-users}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: de4cbd7a-ea8d-4d1a-bbc3-12654b9bfdf0
#             name: manage-clients
#             description: ${role_manage-clients}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 57fcd8ee-0f3d-4767-8abc-62f90b803391
#             name: realm-admin
#             description: ${role_realm-admin}
#             composite: true
#             composites:
#               client:
#                 realm-management:
#                   - view-authorization
#                   - manage-users
#                   - manage-clients
#                   - view-events
#                   - query-realms
#                   - create-client
#                   - query-groups
#                   - manage-identity-providers
#                   - query-clients
#                   - view-clients
#                   - view-users
#                   - manage-realm
#                   - impersonation
#                   - view-identity-providers
#                   - manage-authorization
#                   - view-realm
#                   - query-users
#                   - manage-events
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 4666f113-bfe6-402e-bd10-9622a423c97c
#             name: query-realms
#             description: ${role_query-realms}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: d44ca4ff-23c8-4437-b834-ca496500d3a4
#             name: view-events
#             description: ${role_view-events}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 0e280e03-e9ae-44c2-bef6-40e4fdd8b7ed
#             name: create-client
#             description: ${role_create-client}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 7c60a087-9017-4c61-9afb-d6c8034f1dc3
#             name: query-groups
#             description: ${role_query-groups}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: f2e4945e-023b-4609-8d4e-594b860bb7e1
#             name: manage-identity-providers
#             description: ${role_manage-identity-providers}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: b7ff41f7-90fc-4bf2-99ab-3c3160d5957a
#             name: query-clients
#             description: ${role_query-clients}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: bbfd8c91-acac-44fb-8b09-5bcf9979f9db
#             name: view-clients
#             description: ${role_view-clients}
#             composite: true
#             composites:
#               client:
#                 realm-management:
#                   - query-clients
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 165739e5-78dc-410c-a93f-78d09f557631
#             name: manage-realm
#             description: ${role_manage-realm}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 10ae4099-20c7-4a1e-a281-63eee8990883
#             name: view-users
#             description: ${role_view-users}
#             composite: true
#             composites:
#               client:
#                 realm-management:
#                   - query-users
#                   - query-groups
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 1ba52536-5e0f-4955-b522-5f446b07f273
#             name: impersonation
#             description: ${role_impersonation}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: 416f4b6f-b988-49a4-9fde-1821b38ad986
#             name: view-identity-providers
#             description: ${role_view-identity-providers}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: ba5cd9ca-2ab3-478b-ba55-30e97c5659b4
#             name: manage-authorization
#             description: ${role_manage-authorization}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: d123b339-d554-4895-926b-9d8f30655f7e
#             name: query-users
#             description: ${role_query-users}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: dbc1939b-a4d5-4a46-ab7b-ab3d68e45da7
#             name: view-realm
#             description: ${role_view-realm}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#           - id: b4813d7b-23db-4169-98ca-1d848ea2d2f7
#             name: manage-events
#             description: ${role_manage-events}
#             composite: false
#             clientRole: true
#             containerId: d57af621-6f7e-4f26-98ac-d39ece092ee0
#             attributes: {}
#         security-admin-console: []
#         admin-cli: []
#         argocd-client:
#           - id: 2c5a0a6d-74cd-4f99-8761-3655e8372c19
#             name: uma_protection
#             composite: false
#             clientRole: true
#             containerId: 4c447ec8-65fa-4b18-8868-ab74e2be5b71
#             attributes: {}
#         account-console: []
#         broker:
#           - id: 766f435e-14ad-41f8-b2e1-08498b887bd5
#             name: read-token
#             description: ${role_read-token}
#             composite: false
#             clientRole: true
#             containerId: 9332bc9e-f6fe-4e0d-9fa3-47df1f483630
#             attributes: {}
#         account:
#           - id: 44a1d500-6aeb-41c7-a0a2-37c3402d2803
#             name: delete-account
#             description: ${role_delete-account}
#             composite: false
#             clientRole: true
#             containerId: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#             attributes: {}
#           - id: 54adac6e-433f-4176-87c5-b6d002c56600
#             name: view-applications
#             description: ${role_view-applications}
#             composite: false
#             clientRole: true
#             containerId: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#             attributes: {}
#           - id: b721b46c-8f75-4f0c-a687-a9875e3ab496
#             name: view-profile
#             description: ${role_view-profile}
#             composite: false
#             clientRole: true
#             containerId: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#             attributes: {}
#           - id: 8d8128ae-f37d-47d3-b593-7f47e1c6d81a
#             name: view-consent
#             description: ${role_view-consent}
#             composite: false
#             clientRole: true
#             containerId: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#             attributes: {}
#           - id: 8ffeaf10-46dd-4fb0-9e42-9dc80e03ce38
#             name: view-groups
#             description: ${role_view-groups}
#             composite: false
#             clientRole: true
#             containerId: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#             attributes: {}
#           - id: 90c86cb0-d79a-4cb3-a509-d519809f9ec1
#             name: manage-account-links
#             description: ${role_manage-account-links}
#             composite: false
#             clientRole: true
#             containerId: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#             attributes: {}
#           - id: a1731767-5edd-4066-94b6-f0748bc724d0
#             name: manage-account
#             description: ${role_manage-account}
#             composite: true
#             composites:
#               client:
#                 account:
#                   - manage-account-links
#             clientRole: true
#             containerId: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#             attributes: {}
#           - id: 59047011-5c60-4ae8-b83f-e198c8b2d7c5
#             name: manage-consent
#             description: ${role_manage-consent}
#             composite: true
#             composites:
#               client:
#                 account:
#                   - view-consent
#             clientRole: true
#             containerId: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#             attributes: {}
#     groups:
#       - id: 65ac58ef-7ea1-409f-ab06-3763e9e17b83
#         name: platform-team
#         path: /platform-team
#         attributes: {}
#         realmRoles: []
#         clientRoles: {}
#         subGroups: []
#     defaultRole:
#       id: d7f9b90f-fe25-4f79-adc7-31f59936c8ba
#       name: default-roles-demo
#       description: ${role_default-roles}
#       composite: true
#       clientRole: false
#       containerId: 2054fbeb-d3c7-4a44-9601-2fbc1bf3ac5c
#     requiredCredentials:
#       - password
#     otpPolicyType: totp
#     otpPolicyAlgorithm: HmacSHA1
#     otpPolicyInitialCounter: 0
#     otpPolicyDigits: 6
#     otpPolicyLookAheadWindow: 1
#     otpPolicyPeriod: 30
#     otpPolicyCodeReusable: false
#     otpSupportedApplications:
#       - totpAppGoogleName
#       - totpAppFreeOTPName
#     webAuthnPolicyRpEntityName: keycloak
#     webAuthnPolicySignatureAlgorithms:
#       - ES256
#     webAuthnPolicyRpId: ''
#     webAuthnPolicyAttestationConveyancePreference: not specified
#     webAuthnPolicyAuthenticatorAttachment: not specified
#     webAuthnPolicyRequireResidentKey: not specified
#     webAuthnPolicyUserVerificationRequirement: not specified
#     webAuthnPolicyCreateTimeout: 0
#     webAuthnPolicyAvoidSameAuthenticatorRegister: false
#     webAuthnPolicyAcceptableAaguids: []
#     webAuthnPolicyPasswordlessRpEntityName: keycloak
#     webAuthnPolicyPasswordlessSignatureAlgorithms:
#       - ES256
#     webAuthnPolicyPasswordlessRpId: ''
#     webAuthnPolicyPasswordlessAttestationConveyancePreference: not specified
#     webAuthnPolicyPasswordlessAuthenticatorAttachment: not specified
#     webAuthnPolicyPasswordlessRequireResidentKey: not specified
#     webAuthnPolicyPasswordlessUserVerificationRequirement: not specified
#     webAuthnPolicyPasswordlessCreateTimeout: 0
#     webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: false
#     webAuthnPolicyPasswordlessAcceptableAaguids: []
#     users:
#       - id: d0cae2f8-6ccd-4270-a027-8b2a5bfd7535
#         createdTimestamp: 1673363794768
#         username: service-account-argocd-client
#         enabled: true
#         totp: false
#         emailVerified: false
#         serviceAccountClientId: argocd-client
#         disableableCredentialTypes: []
#         requiredActions: []
#         realmRoles:
#           - default-roles-demo
#         clientRoles:
#           argocd-client:
#             - uma_protection
#         notBefore: 0
#         groups: []
#     scopeMappings:
#       - clientScope: offline_access
#         roles:
#           - offline_access
#     clientScopeMappings:
#       account:
#         - client: account-console
#           roles:
#             - manage-account
#             - view-groups
#     clients:
#       - id: 2efe6861-533a-4272-90ba-40cd8fbcfd53
#         clientId: account
#         name: ${client_account}
#         rootUrl: ${authBaseUrl}
#         baseUrl: /realms/demo/account/
#         surrogateAuthRequired: false
#         enabled: true
#         alwaysDisplayInConsole: false
#         clientAuthenticatorType: client-secret
#         redirectUris:
#           - /realms/demo/account/*
#         webOrigins: []
#         notBefore: 0
#         bearerOnly: false
#         consentRequired: false
#         standardFlowEnabled: true
#         implicitFlowEnabled: false
#         directAccessGrantsEnabled: false
#         serviceAccountsEnabled: false
#         publicClient: true
#         frontchannelLogout: false
#         protocol: openid-connect
#         attributes:
#           post.logout.redirect.uris: +
#         authenticationFlowBindingOverrides: {}
#         fullScopeAllowed: false
#         nodeReRegistrationTimeout: 0
#         defaultClientScopes:
#           - web-origins
#           - acr
#           - roles
#           - profile
#           - email
#         optionalClientScopes:
#           - address
#           - phone
#           - offline_access
#           - microprofile-jwt
#       - id: b59776d5-f3b7-4cb7-af4f-18e03cd53ab0
#         clientId: account-console
#         name: ${client_account-console}
#         rootUrl: ${authBaseUrl}
#         baseUrl: /realms/demo/account/
#         surrogateAuthRequired: false
#         enabled: true
#         alwaysDisplayInConsole: false
#         clientAuthenticatorType: client-secret
#         redirectUris:
#           - /realms/demo/account/*
#         webOrigins: []
#         notBefore: 0
#         bearerOnly: false
#         consentRequired: false
#         standardFlowEnabled: true
#         implicitFlowEnabled: false
#         directAccessGrantsEnabled: false
#         serviceAccountsEnabled: false
#         publicClient: true
#         frontchannelLogout: false
#         protocol: openid-connect
#         attributes:
#           post.logout.redirect.uris: +
#           pkce.code.challenge.method: S256
#         authenticationFlowBindingOverrides: {}
#         fullScopeAllowed: false
#         nodeReRegistrationTimeout: 0
#         protocolMappers:
#           - id: 74b758ff-5991-4199-9867-9a97d789c9a1
#             name: audience resolve
#             protocol: openid-connect
#             protocolMapper: oidc-audience-resolve-mapper
#             consentRequired: false
#             config: {}
#         defaultClientScopes:
#           - web-origins
#           - acr
#           - roles
#           - profile
#           - email
#         optionalClientScopes:
#           - address
#           - phone
#           - offline_access
#           - microprofile-jwt
#       - id: 45734faa-86bc-432d-accc-cb7233ceb3df
#         clientId: admin-cli
#         name: ${client_admin-cli}
#         surrogateAuthRequired: false
#         enabled: true
#         alwaysDisplayInConsole: false
#         clientAuthenticatorType: client-secret
#         redirectUris: []
#         webOrigins: []
#         notBefore: 0
#         bearerOnly: false
#         consentRequired: false
#         standardFlowEnabled: false
#         implicitFlowEnabled: false
#         directAccessGrantsEnabled: true
#         serviceAccountsEnabled: false
#         publicClient: true
#         frontchannelLogout: false
#         protocol: openid-connect
#         attributes: {}
#         authenticationFlowBindingOverrides: {}
#         fullScopeAllowed: false
#         nodeReRegistrationTimeout: 0
#         defaultClientScopes:
#           - web-origins
#           - acr
#           - roles
#           - profile
#           - email
#         optionalClientScopes:
#           - address
#           - phone
#           - offline_access
#           - microprofile-jwt
#       - id: 4c447ec8-65fa-4b18-8868-ab74e2be5b71
#         clientId: argocd-client
#         name: argocd
#         description: ''
#         rootUrl: ''
#         adminUrl: ''
#         baseUrl: ''
#         surrogateAuthRequired: false
#         enabled: true
#         alwaysDisplayInConsole: false
#         clientAuthenticatorType: client-secret
#         secret: '**********'
#         redirectUris:
#           - https://argocd.apps.172-18-0-100.nip.io/auth/callback
#           - https://argocd.apps.kind.172-18-0-100.nip.io/auth/callback
#         webOrigins: []
#         notBefore: 0
#         bearerOnly: false
#         consentRequired: false
#         standardFlowEnabled: true
#         implicitFlowEnabled: false
#         directAccessGrantsEnabled: true
#         serviceAccountsEnabled: true
#         publicClient: false
#         frontchannelLogout: true
#         protocol: openid-connect
#         attributes:
#           client.secret.creation.time: '1673363794'
#           oauth2.device.authorization.grant.enabled: 'false'
#           backchannel.logout.revoke.offline.tokens: 'false'
#           use.refresh.tokens: 'true'
#           tls-client-certificate-bound-access-tokens: 'false'
#           oidc.ciba.grant.enabled: 'false'
#           backchannel.logout.session.required: 'true'
#           client_credentials.use_refresh_token: 'false'
#           acr.loa.map: '{}'
#           require.pushed.authorization.requests: 'false'
#           display.on.consent.screen: 'false'
#           token.response.type.bearer.lower-case: 'false'
#         authenticationFlowBindingOverrides: {}
#         fullScopeAllowed: true
#         nodeReRegistrationTimeout: -1
#         protocolMappers:
#           - id: b9ae1200-3624-4466-adca-17edb320386f
#             name: Client Host
#             protocol: openid-connect
#             protocolMapper: oidc-usersessionmodel-note-mapper
#             consentRequired: false
#             config:
#               user.session.note: clientHost
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: clientHost
#               jsonType.label: String
#           - id: d0236e30-eea4-4b78-ae7b-ce474a2e2fcf
#             name: Client ID
#             protocol: openid-connect
#             protocolMapper: oidc-usersessionmodel-note-mapper
#             consentRequired: false
#             config:
#               user.session.note: clientId
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: clientId
#               jsonType.label: String
#           - id: 283dd402-45e9-45a6-ac37-4d31fb6ac25c
#             name: Client IP Address
#             protocol: openid-connect
#             protocolMapper: oidc-usersessionmodel-note-mapper
#             consentRequired: false
#             config:
#               user.session.note: clientAddress
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: clientAddress
#               jsonType.label: String
#         defaultClientScopes:
#           - web-origins
#           - acr
#           - roles
#           - profile
#           - groups
#           - email
#         optionalClientScopes:
#           - address
#           - phone
#           - offline_access
#           - microprofile-jwt
#       - id: 9332bc9e-f6fe-4e0d-9fa3-47df1f483630
#         clientId: broker
#         name: ${client_broker}
#         surrogateAuthRequired: false
#         enabled: true
#         alwaysDisplayInConsole: false
#         clientAuthenticatorType: client-secret
#         redirectUris: []
#         webOrigins: []
#         notBefore: 0
#         bearerOnly: true
#         consentRequired: false
#         standardFlowEnabled: true
#         implicitFlowEnabled: false
#         directAccessGrantsEnabled: false
#         serviceAccountsEnabled: false
#         publicClient: false
#         frontchannelLogout: false
#         protocol: openid-connect
#         attributes: {}
#         authenticationFlowBindingOverrides: {}
#         fullScopeAllowed: false
#         nodeReRegistrationTimeout: 0
#         defaultClientScopes:
#           - web-origins
#           - acr
#           - roles
#           - profile
#           - email
#         optionalClientScopes:
#           - address
#           - phone
#           - offline_access
#           - microprofile-jwt
#       - id: d57af621-6f7e-4f26-98ac-d39ece092ee0
#         clientId: realm-management
#         name: ${client_realm-management}
#         surrogateAuthRequired: false
#         enabled: true
#         alwaysDisplayInConsole: false
#         clientAuthenticatorType: client-secret
#         redirectUris: []
#         webOrigins: []
#         notBefore: 0
#         bearerOnly: true
#         consentRequired: false
#         standardFlowEnabled: true
#         implicitFlowEnabled: false
#         directAccessGrantsEnabled: false
#         serviceAccountsEnabled: false
#         publicClient: false
#         frontchannelLogout: false
#         protocol: openid-connect
#         attributes: {}
#         authenticationFlowBindingOverrides: {}
#         fullScopeAllowed: false
#         nodeReRegistrationTimeout: 0
#         defaultClientScopes:
#           - web-origins
#           - acr
#           - roles
#           - profile
#           - email
#         optionalClientScopes:
#           - address
#           - phone
#           - offline_access
#           - microprofile-jwt
#       - id: 841d246f-0039-4f1e-8949-5c98123637b7
#         clientId: security-admin-console
#         name: ${client_security-admin-console}
#         rootUrl: ${authAdminUrl}
#         baseUrl: /admin/demo/console/
#         surrogateAuthRequired: false
#         enabled: true
#         alwaysDisplayInConsole: false
#         clientAuthenticatorType: client-secret
#         redirectUris:
#           - /admin/demo/console/*
#         webOrigins:
#           - +
#         notBefore: 0
#         bearerOnly: false
#         consentRequired: false
#         standardFlowEnabled: true
#         implicitFlowEnabled: false
#         directAccessGrantsEnabled: false
#         serviceAccountsEnabled: false
#         publicClient: true
#         frontchannelLogout: false
#         protocol: openid-connect
#         attributes:
#           post.logout.redirect.uris: +
#           pkce.code.challenge.method: S256
#         authenticationFlowBindingOverrides: {}
#         fullScopeAllowed: false
#         nodeReRegistrationTimeout: 0
#         protocolMappers:
#           - id: a6ff3199-2aaf-45ff-a684-1e2fe0b339fd
#             name: locale
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: locale
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: locale
#               jsonType.label: String
#         defaultClientScopes:
#           - web-origins
#           - acr
#           - roles
#           - profile
#           - email
#         optionalClientScopes:
#           - address
#           - phone
#           - offline_access
#           - microprofile-jwt
#     clientScopes:
#       - id: ba5c3762-cb01-4ee5-af7a-81fb0890d5d4
#         name: phone
#         description: 'OpenID Connect built-in scope: phone'
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'true'
#           display.on.consent.screen: 'true'
#           consent.screen.text: ${phoneScopeConsentText}
#         protocolMappers:
#           - id: 3871f784-f7dd-4c8d-8814-34345f1963b4
#             name: phone number verified
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: phoneNumberVerified
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: phone_number_verified
#               jsonType.label: boolean
#           - id: 6697b798-dfc7-4f64-8273-6e63c08c6e97
#             name: phone number
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: phoneNumber
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: phone_number
#               jsonType.label: String
#       - id: 35ec4160-cd99-4517-a77d-461665567f6d
#         name: roles
#         description: OpenID Connect scope for add user roles to the access token
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'false'
#           display.on.consent.screen: 'true'
#           consent.screen.text: ${rolesScopeConsentText}
#         protocolMappers:
#           - id: 585e827e-20f4-473c-81fe-6d8d995a7480
#             name: realm roles
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-realm-role-mapper
#             consentRequired: false
#             config:
#               user.attribute: foo
#               access.token.claim: 'true'
#               claim.name: realm_access.roles
#               jsonType.label: String
#               multivalued: 'true'
#           - id: b1ddebfb-7eb8-40dd-876e-4899804091dc
#             name: client roles
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-client-role-mapper
#             consentRequired: false
#             config:
#               user.attribute: foo
#               access.token.claim: 'true'
#               claim.name: resource_access.${client_id}.roles
#               jsonType.label: String
#               multivalued: 'true'
#           - id: c46dd6f6-916d-437a-8d1f-59b51804bd87
#             name: audience resolve
#             protocol: openid-connect
#             protocolMapper: oidc-audience-resolve-mapper
#             consentRequired: false
#             config: {}
#       - id: 89fc3201-2fc6-458c-9d55-c54fd8622168
#         name: email
#         description: 'OpenID Connect built-in scope: email'
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'true'
#           display.on.consent.screen: 'true'
#           consent.screen.text: ${emailScopeConsentText}
#         protocolMappers:
#           - id: 5a14a77f-2e05-4e99-82c9-b58dc1cd5d6a
#             name: email verified
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-property-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: emailVerified
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: email_verified
#               jsonType.label: boolean
#           - id: 2f99b325-6adf-48e5-8604-c2d46e59e614
#             name: email
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-property-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: email
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: email
#               jsonType.label: String
#       - id: 07e1f024-60bd-4a5b-a584-56af8b357e52
#         name: acr
#         description: >-
#           OpenID Connect scope for add acr (authentication context class reference)
#           to the token
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'false'
#           display.on.consent.screen: 'false'
#         protocolMappers:
#           - id: 350e6d96-7a29-45cb-ae47-d4c07197c379
#             name: acr loa level
#             protocol: openid-connect
#             protocolMapper: oidc-acr-mapper
#             consentRequired: false
#             config:
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#       - id: cd1ae4ca-cf8c-422b-97c9-48fb00736cfa
#         name: web-origins
#         description: OpenID Connect scope for add allowed web origins to the access token
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'false'
#           display.on.consent.screen: 'false'
#           consent.screen.text: ''
#         protocolMappers:
#           - id: f59f9e0c-da16-4a74-96dc-9f817904b7f0
#             name: allowed web origins
#             protocol: openid-connect
#             protocolMapper: oidc-allowed-origins-mapper
#             consentRequired: false
#             config: {}
#       - id: b1bb8216-479a-46f7-b49e-50d90e71a154
#         name: profile
#         description: 'OpenID Connect built-in scope: profile'
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'true'
#           display.on.consent.screen: 'true'
#           consent.screen.text: ${profileScopeConsentText}
#         protocolMappers:
#           - id: 7223a827-052e-4596-8644-9d5614515349
#             name: family name
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-property-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: lastName
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: family_name
#               jsonType.label: String
#           - id: 418affaa-a07f-46f0-b84e-9745d5787bd7
#             name: website
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: website
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: website
#               jsonType.label: String
#           - id: b61e60bd-0115-48b8-84c8-d1f98dd8bf65
#             name: updated at
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: updatedAt
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: updated_at
#               jsonType.label: long
#           - id: 0fe2c42c-8551-4bd9-adc4-de78ff04e3df
#             name: given name
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-property-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: firstName
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: given_name
#               jsonType.label: String
#           - id: 4ae554a4-ac95-4345-b2f2-e35a53f28634
#             name: profile
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: profile
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: profile
#               jsonType.label: String
#           - id: 49f88f1d-2c79-42dc-9851-85b25e2ec024
#             name: username
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-property-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: username
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: preferred_username
#               jsonType.label: String
#           - id: 466ef6d6-507e-467b-b13f-f179159ba194
#             name: gender
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: gender
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: gender
#               jsonType.label: String
#           - id: e975d8a8-8af5-4289-ae20-f06da5363c89
#             name: picture
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: picture
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: picture
#               jsonType.label: String
#           - id: 1ab4bd58-4bc5-404c-b381-5e10ecbc24b2
#             name: nickname
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: nickname
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: nickname
#               jsonType.label: String
#           - id: e1fcb618-062b-4672-833a-2f9a8ae88408
#             name: middle name
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: middleName
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: middle_name
#               jsonType.label: String
#           - id: bf3e82da-1a4b-4306-b863-098c29c0a712
#             name: full name
#             protocol: openid-connect
#             protocolMapper: oidc-full-name-mapper
#             consentRequired: false
#             config:
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               userinfo.token.claim: 'true'
#           - id: 6fcff7e6-828a-48a6-85da-394cf009a7ad
#             name: locale
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: locale
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: locale
#               jsonType.label: String
#           - id: 6633f934-8665-4851-967a-c3c39307b9bf
#             name: zoneinfo
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: zoneinfo
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: zoneinfo
#               jsonType.label: String
#           - id: dcd92ee9-2302-44bc-b04e-566f051eb7a8
#             name: birthdate
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-attribute-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: birthdate
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: birthdate
#               jsonType.label: String
#       - id: 484f395c-9e17-4cd5-b362-c9bf8ecc04ce
#         name: address
#         description: 'OpenID Connect built-in scope: address'
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'true'
#           display.on.consent.screen: 'true'
#           consent.screen.text: ${addressScopeConsentText}
#         protocolMappers:
#           - id: e753e413-c301-4ef9-ba88-bf9aa17005b0
#             name: address
#             protocol: openid-connect
#             protocolMapper: oidc-address-mapper
#             consentRequired: false
#             config:
#               user.attribute.formatted: formatted
#               user.attribute.country: country
#               user.attribute.postal_code: postal_code
#               userinfo.token.claim: 'true'
#               user.attribute.street: street
#               id.token.claim: 'true'
#               user.attribute.region: region
#               access.token.claim: 'true'
#               user.attribute.locality: locality
#       - id: b07642f8-4689-48f2-ad6c-da5d3c23375c
#         name: groups
#         description: ''
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'true'
#           display.on.consent.screen: 'true'
#           gui.order: ''
#           consent.screen.text: ''
#         protocolMappers:
#           - id: 2f075763-4943-4ce9-8999-35c9c1b9f823
#             name: groups
#             protocol: openid-connect
#             protocolMapper: oidc-group-membership-mapper
#             consentRequired: false
#             config:
#               full.path: 'false'
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: groups
#               userinfo.token.claim: 'false'
#       - id: 3f0a2381-20a8-4d14-b5c8-16bc81d7fcb1
#         name: role_list
#         description: SAML role list
#         protocol: saml
#         attributes:
#           consent.screen.text: ${samlRoleListScopeConsentText}
#           display.on.consent.screen: 'true'
#         protocolMappers:
#           - id: 0402bce3-d48d-4f03-9f9a-dfd022a118ee
#             name: role list
#             protocol: saml
#             protocolMapper: saml-role-list-mapper
#             consentRequired: false
#             config:
#               single: 'false'
#               attribute.nameformat: Basic
#               attribute.name: Role
#       - id: de1870b2-2379-4d9d-acfa-c5eb8090242b
#         name: microprofile-jwt
#         description: Microprofile - JWT built-in scope
#         protocol: openid-connect
#         attributes:
#           include.in.token.scope: 'true'
#           display.on.consent.screen: 'false'
#         protocolMappers:
#           - id: f071d7e8-09fc-4d5a-96c4-8a3243f94fa0
#             name: upn
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-property-mapper
#             consentRequired: false
#             config:
#               userinfo.token.claim: 'true'
#               user.attribute: username
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: upn
#               jsonType.label: String
#           - id: a1adbe4a-5759-4344-8a4a-6f6dfdda67f4
#             name: groups
#             protocol: openid-connect
#             protocolMapper: oidc-usermodel-realm-role-mapper
#             consentRequired: false
#             config:
#               multivalued: 'true'
#               user.attribute: foo
#               id.token.claim: 'true'
#               access.token.claim: 'true'
#               claim.name: groups
#               jsonType.label: String
#       - id: 69e44bf7-3c5c-4636-8625-0b07cd9eddb9
#         name: offline_access
#         description: 'OpenID Connect built-in scope: offline_access'
#         protocol: openid-connect
#         attributes:
#           consent.screen.text: ${offlineAccessScopeConsentText}
#           display.on.consent.screen: 'true'
#     defaultDefaultClientScopes:
#       - role_list
#       - profile
#       - email
#       - roles
#       - web-origins
#       - acr
#       - groups
#     defaultOptionalClientScopes:
#       - offline_access
#       - address
#       - phone
#       - microprofile-jwt
#     browserSecurityHeaders:
#       contentSecurityPolicyReportOnly: ''
#       xContentTypeOptions: nosniff
#       xRobotsTag: none
#       xFrameOptions: SAMEORIGIN
#       contentSecurityPolicy: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
#       xXSSProtection: 1; mode=block
#       strictTransportSecurity: max-age=31536000; includeSubDomains
#     smtpServer: {}
#     eventsEnabled: false
#     eventsListeners:
#       - jboss-logging
#     enabledEventTypes: []
#     adminEventsEnabled: false
#     adminEventsDetailsEnabled: false
#     identityProviders: []
#     identityProviderMappers: []
#     components:
#       org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy:
#         - id: 2a32c694-3d09-4b5e-bbea-70283d98371c
#           name: Max Clients Limit
#           providerId: max-clients
#           subType: anonymous
#           subComponents: {}
#           config:
#             max-clients:
#               - '200'
#         - id: fa797b92-dd2e-4c6f-a418-11d78910adee
#           name: Allowed Protocol Mapper Types
#           providerId: allowed-protocol-mappers
#           subType: anonymous
#           subComponents: {}
#           config:
#             allowed-protocol-mapper-types:
#               - saml-user-property-mapper
#               - oidc-full-name-mapper
#               - oidc-usermodel-property-mapper
#               - saml-role-list-mapper
#               - oidc-usermodel-attribute-mapper
#               - oidc-address-mapper
#               - oidc-sha256-pairwise-sub-mapper
#               - saml-user-attribute-mapper
#         - id: eb935a74-1e1f-4aa1-842a-72cb23b2ed51
#           name: Allowed Protocol Mapper Types
#           providerId: allowed-protocol-mappers
#           subType: authenticated
#           subComponents: {}
#           config:
#             allowed-protocol-mapper-types:
#               - saml-user-attribute-mapper
#               - oidc-sha256-pairwise-sub-mapper
#               - saml-user-property-mapper
#               - oidc-usermodel-attribute-mapper
#               - oidc-usermodel-property-mapper
#               - saml-role-list-mapper
#               - oidc-address-mapper
#               - oidc-full-name-mapper
#         - id: 6b15ea09-91d8-4012-a40b-713bc8b0e77e
#           name: Allowed Client Scopes
#           providerId: allowed-client-templates
#           subType: anonymous
#           subComponents: {}
#           config:
#             allow-default-scopes:
#               - 'true'
#         - id: 59f687ca-d843-4b78-b57c-b34e1a65a56a
#           name: Trusted Hosts
#           providerId: trusted-hosts
#           subType: anonymous
#           subComponents: {}
#           config:
#             host-sending-registration-request-must-match:
#               - 'true'
#             client-uris-must-match:
#               - 'true'
#         - id: 07204428-83c5-4889-8e66-1cd42dc143ca
#           name: Allowed Client Scopes
#           providerId: allowed-client-templates
#           subType: authenticated
#           subComponents: {}
#           config:
#             allow-default-scopes:
#               - 'true'
#         - id: 46080d1f-77c1-44b3-bacc-34fdbe8c2b03
#           name: Full Scope Disabled
#           providerId: scope
#           subType: anonymous
#           subComponents: {}
#           config: {}
#         - id: 47c22b5d-39df-471a-be6b-7be65e070c3f
#           name: Consent Required
#           providerId: consent-required
#           subType: anonymous
#           subComponents: {}
#           config: {}
#       org.keycloak.keys.KeyProvider:
#         - id: 478697b9-04de-43e5-94ee-95f9cd6e8edb
#           name: rsa-enc-generated
#           providerId: rsa-enc-generated
#           subComponents: {}
#           config:
#             priority:
#               - '100'
#             algorithm:
#               - RSA-OAEP
#         - id: 9c4efdde-7c25-44c7-8354-8373dbe9b48d
#           name: rsa-generated
#           providerId: rsa-generated
#           subComponents: {}
#           config:
#             priority:
#               - '100'
#         - id: 1f7bad62-fa57-47df-b39f-61368817ab24
#           name: aes-generated
#           providerId: aes-generated
#           subComponents: {}
#           config:
#             priority:
#               - '100'
#         - id: 76032486-cc9d-418a-8bbf-11ece31005c6
#           name: hmac-generated
#           providerId: hmac-generated
#           subComponents: {}
#           config:
#             priority:
#               - '100'
#             algorithm:
#               - HS256
#     internationalizationEnabled: false
#     supportedLocales: []
#     authenticationFlows:
#       - id: 34cb5b2e-3300-4026-859e-4770381fa892
#         alias: Account verification options
#         description: Method with which to verity the existing account
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: idp-email-verification
#             authenticatorFlow: false
#             requirement: ALTERNATIVE
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: ALTERNATIVE
#             priority: 20
#             autheticatorFlow: true
#             flowAlias: Verify Existing Account by Re-authentication
#             userSetupAllowed: false
#       - id: a5f0902c-1853-40cf-a07e-25da9e662105
#         alias: Authentication Options
#         description: Authentication options.
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: basic-auth
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: basic-auth-otp
#             authenticatorFlow: false
#             requirement: DISABLED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: auth-spnego
#             authenticatorFlow: false
#             requirement: DISABLED
#             priority: 30
#             autheticatorFlow: false
#             userSetupAllowed: false
#       - id: 18b17c63-30fd-46f3-8580-09cf20bf459c
#         alias: Browser - Conditional OTP
#         description: Flow to determine if the OTP is required for the authentication
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: conditional-user-configured
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: auth-otp-form
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#       - id: d98b4b86-4717-4e6c-9e62-583c74fd1dff
#         alias: Direct Grant - Conditional OTP
#         description: Flow to determine if the OTP is required for the authentication
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: conditional-user-configured
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: direct-grant-validate-otp
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#       - id: f94f15fb-7d68-4b2a-8836-32949154fdb9
#         alias: First broker login - Conditional OTP
#         description: Flow to determine if the OTP is required for the authentication
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: conditional-user-configured
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: auth-otp-form
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#       - id: ab8fb00d-1874-4359-ad8d-bae3b32168d1
#         alias: Handle Existing Account
#         description: >-
#           Handle what to do if there is existing account with same email/username
#           like authenticated identity provider
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: idp-confirm-link
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: true
#             flowAlias: Account verification options
#             userSetupAllowed: false
#       - id: 6be9d376-9b2e-42a5-8581-397179b7f4b0
#         alias: Reset - Conditional OTP
#         description: >-
#           Flow to determine if the OTP should be reset or not. Set to REQUIRED to
#           force.
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: conditional-user-configured
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: reset-otp
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#       - id: 04706061-1d52-4661-8f2d-713f0b8bc138
#         alias: User creation or linking
#         description: Flow for the existing/non-existing user alternatives
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticatorConfig: create unique user config
#             authenticator: idp-create-user-if-unique
#             authenticatorFlow: false
#             requirement: ALTERNATIVE
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: ALTERNATIVE
#             priority: 20
#             autheticatorFlow: true
#             flowAlias: Handle Existing Account
#             userSetupAllowed: false
#       - id: da50d277-62a1-4371-9a36-c8adb91b678d
#         alias: Verify Existing Account by Re-authentication
#         description: Reauthentication of existing account
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: idp-username-password-form
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: CONDITIONAL
#             priority: 20
#             autheticatorFlow: true
#             flowAlias: First broker login - Conditional OTP
#             userSetupAllowed: false
#       - id: 179957e8-3116-496d-87dc-35344536f8b9
#         alias: browser
#         description: browser based authentication
#         providerId: basic-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: auth-cookie
#             authenticatorFlow: false
#             requirement: ALTERNATIVE
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: auth-spnego
#             authenticatorFlow: false
#             requirement: DISABLED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: identity-provider-redirector
#             authenticatorFlow: false
#             requirement: ALTERNATIVE
#             priority: 25
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: ALTERNATIVE
#             priority: 30
#             autheticatorFlow: true
#             flowAlias: forms
#             userSetupAllowed: false
#       - id: 2e91d7d6-5f43-4de0-89b7-8c91933194ec
#         alias: clients
#         description: Base authentication for clients
#         providerId: client-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: client-secret
#             authenticatorFlow: false
#             requirement: ALTERNATIVE
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: client-jwt
#             authenticatorFlow: false
#             requirement: ALTERNATIVE
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: client-secret-jwt
#             authenticatorFlow: false
#             requirement: ALTERNATIVE
#             priority: 30
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: client-x509
#             authenticatorFlow: false
#             requirement: ALTERNATIVE
#             priority: 40
#             autheticatorFlow: false
#             userSetupAllowed: false
#       - id: 0c5ee043-e2fc-46f3-b908-470e2ef8983d
#         alias: direct grant
#         description: OpenID Connect Resource Owner Grant
#         providerId: basic-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: direct-grant-validate-username
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: direct-grant-validate-password
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: CONDITIONAL
#             priority: 30
#             autheticatorFlow: true
#             flowAlias: Direct Grant - Conditional OTP
#             userSetupAllowed: false
#       - id: bec239c3-6136-464e-a26d-421be1970817
#         alias: docker auth
#         description: Used by Docker clients to authenticate against the IDP
#         providerId: basic-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: docker-http-basic-authenticator
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#       - id: 8c419134-357b-426d-a812-25e367480271
#         alias: first broker login
#         description: >-
#           Actions taken after first broker login with identity provider account,
#           which is not yet linked to any Keycloak account
#         providerId: basic-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticatorConfig: review profile config
#             authenticator: idp-review-profile
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: true
#             flowAlias: User creation or linking
#             userSetupAllowed: false
#       - id: f92a0c20-27ea-4c5e-9612-d5a91ae38470
#         alias: forms
#         description: Username, password, otp and other auth forms.
#         providerId: basic-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: auth-username-password-form
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: CONDITIONAL
#             priority: 20
#             autheticatorFlow: true
#             flowAlias: Browser - Conditional OTP
#             userSetupAllowed: false
#       - id: 6b268b64-125f-43b9-a9eb-b2c0290959f5
#         alias: http challenge
#         description: >-
#           An authentication flow based on challenge-response HTTP Authentication
#           Schemes
#         providerId: basic-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: no-cookie-redirect
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: true
#             flowAlias: Authentication Options
#             userSetupAllowed: false
#       - id: ddcb5953-3d2a-4dd4-90bd-6cd86f3571a8
#         alias: registration
#         description: registration flow
#         providerId: basic-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: registration-page-form
#             authenticatorFlow: true
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: true
#             flowAlias: registration form
#             userSetupAllowed: false
#       - id: 4e6203ef-aefd-4c03-ab9b-420563416c6b
#         alias: registration form
#         description: registration form
#         providerId: form-flow
#         topLevel: false
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: registration-user-creation
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: registration-profile-action
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 40
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: registration-password-action
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 50
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: registration-recaptcha-action
#             authenticatorFlow: false
#             requirement: DISABLED
#             priority: 60
#             autheticatorFlow: false
#             userSetupAllowed: false
#       - id: e5c92a49-1041-42de-bed8-0cda8dc46fea
#         alias: reset credentials
#         description: Reset credentials for a user if they forgot their password or something
#         providerId: basic-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: reset-credentials-choose-user
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: reset-credential-email
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 20
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticator: reset-password
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 30
#             autheticatorFlow: false
#             userSetupAllowed: false
#           - authenticatorFlow: true
#             requirement: CONDITIONAL
#             priority: 40
#             autheticatorFlow: true
#             flowAlias: Reset - Conditional OTP
#             userSetupAllowed: false
#       - id: f7a743d4-9c26-480a-a86a-7cee125ea9d8
#         alias: saml ecp
#         description: SAML ECP Profile Authentication Flow
#         providerId: basic-flow
#         topLevel: true
#         builtIn: true
#         authenticationExecutions:
#           - authenticator: http-basic-authenticator
#             authenticatorFlow: false
#             requirement: REQUIRED
#             priority: 10
#             autheticatorFlow: false
#             userSetupAllowed: false
#     authenticatorConfig:
#       - id: b9e8b101-3867-4973-8019-87b45a19f317
#         alias: create unique user config
#         config:
#           require.password.update.after.registration: 'false'
#       - id: 5e933cec-b7ee-4513-b980-c140a1054b1d
#         alias: review profile config
#         config:
#           update.profile.on.first.login: missing
#     requiredActions:
#       - alias: CONFIGURE_TOTP
#         name: Configure OTP
#         providerId: CONFIGURE_TOTP
#         enabled: true
#         defaultAction: false
#         priority: 10
#         config: {}
#       - alias: terms_and_conditions
#         name: Terms and Conditions
#         providerId: terms_and_conditions
#         enabled: false
#         defaultAction: false
#         priority: 20
#         config: {}
#       - alias: UPDATE_PASSWORD
#         name: Update Password
#         providerId: UPDATE_PASSWORD
#         enabled: true
#         defaultAction: false
#         priority: 30
#         config: {}
#       - alias: UPDATE_PROFILE
#         name: Update Profile
#         providerId: UPDATE_PROFILE
#         enabled: true
#         defaultAction: false
#         priority: 40
#         config: {}
#       - alias: VERIFY_EMAIL
#         name: Verify Email
#         providerId: VERIFY_EMAIL
#         enabled: true
#         defaultAction: false
#         priority: 50
#         config: {}
#       - alias: delete_account
#         name: Delete Account
#         providerId: delete_account
#         enabled: false
#         defaultAction: false
#         priority: 60
#         config: {}
#       - alias: webauthn-register
#         name: Webauthn Register
#         providerId: webauthn-register
#         enabled: true
#         defaultAction: false
#         priority: 70
#         config: {}
#       - alias: webauthn-register-passwordless
#         name: Webauthn Register Passwordless
#         providerId: webauthn-register-passwordless
#         enabled: true
#         defaultAction: false
#         priority: 80
#         config: {}
#       - alias: update_user_locale
#         name: Update User Locale
#         providerId: update_user_locale
#         enabled: true
#         defaultAction: false
#         priority: 1000
#         config: {}
#     browserFlow: browser
#     registrationFlow: registration
#     directGrantFlow: direct grant
#     resetCredentialsFlow: reset credentials
#     clientAuthenticationFlow: clients
#     dockerAuthenticationFlow: docker auth
#     attributes:
#       cibaBackchannelTokenDeliveryMode: poll
#       cibaExpiresIn: '120'
#       cibaAuthRequestedUserHint: login_hint
#       oauth2DeviceCodeLifespan: '600'
#       oauth2DevicePollingInterval: '5'
#       parRequestUriLifespan: '60'
#       cibaInterval: '5'
#       realmReusableOtpCode: 'false'
#     keycloakVersion: 20.0.2
#     userManagedAccessAllowed: false
#     clientProfiles:
#       profiles: []
#     clientPolicies:
#       policies: []
